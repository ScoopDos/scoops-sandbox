name: Discord Commit Embed

on:
  push:
    branches:
      - main  # or your dev branch

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # ensures previous commit is available

      - name: Extract commit info and format file changes
        run: |
          # Split commit message into title and body
          TITLE=$(echo "${{ github.event.head_commit.message }}" | head -n1)
          BODY=$(echo "${{ github.event.head_commit.message }}" | tail -n +2)

          # Get changed files with full status
          FILES=$(git diff --name-status HEAD~1 HEAD | sed 's/\t/ /g')
          FORMATTED=""
          while read -r line; do
            STATUS=$(echo "$line" | cut -d' ' -f1)
            FILE=$(echo "$line" | cut -d' ' -f2-)
            case "$STATUS" in
              A) LABEL="**Added:**" ;;
              M) LABEL="**Modified:**" ;;
              D) LABEL="**Deleted:**" ;;
              *) LABEL="**Changed:**" ;;
            esac
            FORMATTED="$FORMATTED\\nâ€¢ $LABEL $FILE"
          done <<< "$FILES"

          # Export to environment
          echo "COMMIT_TITLE=$TITLE" >> $GITHUB_ENV
          echo "COMMIT_BODY=$BODY" >> $GITHUB_ENV
          echo "FILES_CHANGED=$FORMATTED" >> $GITHUB_ENV

      - name: Send embed to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          echo "{
            \"username\": \"Scoop Update Bot\",
            \"embeds\": [{
              \"title\": \"$COMMIT_TITLE\",
              \"description\": \"$COMMIT_BODY\\n\\n**Files Changed:**$FILES_CHANGED\",
              \"url\": \"${{ github.event.head_commit.url }}\",
              \"color\": 5814783,
              \"fields\": [
                {
                  \"name\": \"Author\",
                  \"value\": \"${{ github.actor }}\",
                  \"inline\": true
                },
                {
                  \"name\": \"Branch\",
                  \"value\": \"${{ github.ref_name }}\",
                  \"inline\": true
                }
              ],
              \"footer\": {
                \"text\": \"Scoop's Projects\"
              },
              \"timestamp\": \"${{ github.event.head_commit.timestamp }}\"
            }]
          }" > payload.json

          curl -H "Content-Type: application/json" \
               -X POST \
               -d @payload.json \
               "$DISCORD_WEBHOOK"
